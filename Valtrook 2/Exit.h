#pragma once
#include <stdlib.h>
#include <iostream>

/* Enum for Exit Messages */
enum Exit : uint32_t {
	ERROR_BAD_TYPE = 50,

	ERROR_SDL_FAILED_TO_CREATE_WINDOW = 100,
	ERROR_SDL_FAILED_TO_CREATE_GL_CONTEXT,
	ERROR_GLEW_FAILED_TO_INITIALIZE,

	//Errors in asset loading
	ERROR_FAILED_TO_READ_FILE = 200,
	ERROR_FAILED_TO_INITIALISE_SDL_IMG,
	ERROR_FAILED_TO_INITIALISE_SDL_TTF,

	//Errors in GL 
	ERROR_VERTEX_SHADER_FAILEDTOCOMPILE = 1000,
	ERROR_FRAGMENT_SHADER_FAILEDTOCOMPILE,
	ERROR_GEOMETRY_SHADER_FAILEDTOCOMPILE,
	ERROR_CONTROL_TESSELATION_SHADER_FAILEDTOCOMPILE,
	ERROR_EVALUATION_TESSELATION_SHADER_FAILEDTOCOMPILE,
	ERROR_SHADER_FAILEDTOCOMPILE,
	ERROR_SHADER_FAILEDTOLINK,
	ERROR_SHADER_FAILEDTOREADFILE,
	ERROR_FBO_FAILED,
};

static void pausedExit(Exit t) {
	//Dirty Hack.
	int i = 0;
	std::cout << "\n\nAny Key To Continue...";
	std::cin >> i;
	exit(t);
}